# Generated by Django 4.0.8 on 2023-09-26 19:19

import common.models.generic_batch
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='ARSample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('runtime', models.IntegerField(default=0)),
                ('sem', models.BooleanField(blank=True, default=False)),
                ('storage', models.IntegerField(blank=True, choices=[(0, 'Air'), (1, 'Nitrogen'), (2, 'Vacuum')], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='CleanRecipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('type', models.IntegerField(blank=True, choices=[(0, 'Piranha'), (1, 'O2 Plasma'), (2, 'Solvent Mixture'), (3, 'Ultrasonic'), (4, 'Decon 90 Solution')], default=0)),
                ('temp_c', models.FloatField(blank=True, default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='EtchRecipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.CharField(max_length=250, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('notes', models.CharField(max_length=250, null=True)),
                ('active', models.BooleanField(default=True)),
                ('power_watt', models.FloatField(default=0.0)),
                ('time_sec', models.FloatField(default=0.0)),
                ('press_mtorr', models.FloatField(default=0.0)),
                ('sf6_sccm', models.FloatField(default=0.0)),
                ('c4f8_sccm', models.FloatField(default=0.0)),
                ('chf3_sccm', models.FloatField(default=0.0)),
                ('o2_sccm', models.FloatField(default=0.0)),
                ('he_sccm', models.FloatField(default=0.0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Fail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, unique=True)),
                ('description', models.CharField(max_length=250, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.CharField(max_length=250, null=True)),
                ('code', models.CharField(max_length=250, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RIERecipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('chf3', models.FloatField(blank=True, default=0.0)),
                ('sf6', models.FloatField(blank=True, default=0.0)),
                ('helium', models.FloatField(blank=True, default=0.0)),
                ('o2', models.FloatField(blank=True, default=0.0)),
                ('c4f8', models.FloatField(blank=True, default=0.0)),
                ('rie_power', models.FloatField(blank=True, default=0.0)),
                ('icp_power', models.FloatField(blank=True, default=0.0)),
                ('pressure_mtorr', models.FloatField(blank=True, default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='RieTooling',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.CharField(max_length=250, null=True)),
                ('code', models.CharField(max_length=250, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Substrate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('type', models.IntegerField(choices=[(0, 'Fused Silica'), (1, 'BK7')], default=0)),
                ('od_mm', models.FloatField(default=0.0)),
                ('thickness_mm', models.FloatField(default=0.0)),
                ('grade', models.IntegerField(choices=[(0, 'IR'), (1, 'UV')], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Tooling',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('material', models.IntegerField(choices=[(0, 'Stainless Steel'), (1, 'Aluminum')], default=0)),
                ('pockets', models.IntegerField(default=0)),
                ('od_mm', models.FloatField(default=0.0)),
                ('thickness_mm', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='VendorSku',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('location', models.CharField(max_length=250, null=True)),
                ('description', models.CharField(max_length=250, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('stock_min', models.IntegerField(default=0)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=12)),
                ('active', models.BooleanField(default=True)),
                ('special', models.BooleanField(default=False)),
                ('notes', models.CharField(max_length=250, null=True)),
                ('vendor_object_id', models.PositiveIntegerField()),
                ('alternate_vendor_object_id', models.PositiveIntegerField()),
                ('alternate_vendor_content_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_alt_vendor_skus', to='contenttypes.contenttype')),
                ('vendor_content_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_vendor_skus', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TarBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('order_no', models.CharField(max_length=50)),
                ('qty', models.PositiveIntegerField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('ordered', models.DateField(null=True)),
                ('needed', models.DateField(default=common.models.generic_batch.date_needed)),
                ('closed', models.BooleanField(default=False)),
                ('step_object_id', models.PositiveIntegerField()),
                ('hold', models.BooleanField(default=False)),
                ('notes', models.CharField(max_length=250, null=True)),
                ('qrcode', models.FileField(blank=True, null=True, upload_to='qrcodes')),
                ('sku_object_id', models.PositiveIntegerField()),
                ('batch_type', models.CharField(choices=[('PRODUCTION', 'PRODUCTION'), ('DEVELOPMENT', 'DEVELOPMENT'), ('TEST', 'TEST'), ('CUSTOM', 'CUSTOM')], default='PROD', max_length=25)),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='texturedar.etchrecipe')),
                ('sku_content_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_batch_skus', to='contenttypes.contenttype')),
                ('step_content_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_batch_steps', to='contenttypes.contenttype')),
                ('tooling', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='texturedar.rietooling')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, to_field='username')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Step',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(max_length=250, null=True)),
                ('location', models.CharField(max_length=100, null=True)),
                ('next_step', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_next_related_steps', to='texturedar.step', to_field='name')),
                ('previous_step', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_prev_related_steps', to='texturedar.step', to_field='name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RieSystem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.CharField(max_length=250, null=True)),
                ('vendor_object_id', models.PositiveIntegerField()),
                ('alternate_vendor_object_id', models.PositiveIntegerField()),
                ('code', models.CharField(max_length=250, unique=True)),
                ('notes', models.CharField(max_length=250, null=True)),
                ('serial', models.CharField(max_length=250, null=True)),
                ('model', models.CharField(max_length=250, null=True)),
                ('purchased', models.DateField(null=True)),
                ('alternate_vendor_content_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_alt_vendor_skus', to='contenttypes.contenttype')),
                ('vendor_content_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_vendor_skus', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RawMaterialSku',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('location', models.CharField(max_length=250, null=True)),
                ('description', models.CharField(max_length=250, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('stock_min', models.IntegerField(default=0)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=12)),
                ('active', models.BooleanField(default=True)),
                ('special', models.BooleanField(default=False)),
                ('notes', models.CharField(max_length=250, null=True)),
                ('qty', models.IntegerField()),
                ('min_trans_300', models.FloatField(default='0.00')),
                ('min_trans_500', models.FloatField(default='0.00')),
                ('min_trans_1385', models.FloatField(default='0.00')),
                ('vendor_sku', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='related_rmskus', to='texturedar.vendorsku', to_field='name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial', models.CharField(max_length=50, null=True)),
                ('index', models.PositiveIntegerField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('notes', models.CharField(max_length=250, null=True)),
                ('fail1_object_id', models.PositiveIntegerField(null=True)),
                ('fail2_object_id', models.PositiveIntegerField(null=True)),
                ('fail3_object_id', models.PositiveIntegerField(null=True)),
                ('step_object_id', models.PositiveIntegerField()),
                ('batch_object_id', models.PositiveIntegerField(null=True)),
                ('shipment_object_id', models.PositiveIntegerField(null=True)),
                ('pocket', models.IntegerField()),
                ('in_inventory', models.BooleanField(default=False)),
                ('trans_300_pre', models.FloatField(null=True)),
                ('trans_500_pre', models.FloatField(null=True)),
                ('trans_1385_pre', models.FloatField(null=True)),
                ('trans_300_post', models.FloatField(null=True)),
                ('trans_500_post', models.FloatField(null=True)),
                ('trans_700_post', models.FloatField(null=True)),
                ('trans_900_post', models.FloatField(null=True)),
                ('trans_1100_post', models.FloatField(null=True)),
                ('trans_1300_post', models.FloatField(null=True)),
                ('trans_1500_post', models.FloatField(null=True)),
                ('trans_1650_post', models.FloatField(null=True)),
                ('act_time', models.FloatField(null=True)),
                ('image_data_pre', models.ImageField(null=True, upload_to='ar_data/production/image_data/pre/')),
                ('image_data_post', models.ImageField(null=True, upload_to='ar_data/production/image_data/post/')),
                ('sem_data', models.ImageField(null=True, upload_to='ar_data/production/sem_data/')),
                ('uv_vis_data_pre', models.FileField(null=True, upload_to='ar_data/production/uv_vis_data/pre/')),
                ('uv_vis_data_post', models.FileField(null=True, upload_to='ar_data/production/uv_vis_data/post/')),
                ('ir_data_pre', models.FileField(null=True, upload_to='ar_data/production/ir_data/pre/')),
                ('ir_data_post', models.FileField(null=True, upload_to='ar_data/production/ir_data/post/')),
                ('tap_data', models.FileField(null=True, upload_to='ar_data/production/tap_data/')),
                ('uv_object_id', models.PositiveIntegerField(null=True)),
                ('vis_object_id', models.PositiveIntegerField(null=True)),
                ('ir_object_id', models.PositiveIntegerField(null=True)),
                ('batch_content_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_batch_parts', to='contenttypes.contenttype')),
                ('fail1_content_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_fail1_parts', to='contenttypes.contenttype')),
                ('fail2_content_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_fail2_parts', to='contenttypes.contenttype')),
                ('fail3_content_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_fail3_parts', to='contenttypes.contenttype')),
                ('ir_content_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_ir_parts', to='contenttypes.contenttype')),
                ('shipment_content_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_shipped_parts', to='contenttypes.contenttype')),
                ('step_content_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_step_parts', to='contenttypes.contenttype')),
                ('uv_content_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_uv_parts', to='contenttypes.contenttype')),
                ('vis_content_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_vis_parts', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OpticalCoatSku',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('location', models.CharField(max_length=250, null=True)),
                ('description', models.CharField(max_length=250, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('stock_min', models.IntegerField(default=0)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=12)),
                ('active', models.BooleanField(default=True)),
                ('special', models.BooleanField(default=False)),
                ('notes', models.CharField(max_length=250, null=True)),
                ('scratch', models.IntegerField(default=0)),
                ('dig', models.IntegerField(default=0)),
                ('clear_aperture', models.FloatField(default='0.00')),
                ('min_trans_300', models.FloatField(default='0.00')),
                ('min_trans_500', models.FloatField(default='0.00')),
                ('min_trans_700', models.FloatField(default='0.00')),
                ('min_trans_900', models.FloatField(default='0.00')),
                ('min_trans_1100', models.FloatField(default='0.00')),
                ('min_trans_1300', models.FloatField(default='0.00')),
                ('min_trans_1500', models.FloatField(default='0.00')),
                ('min_trans_1650', models.FloatField(default='0.00')),
                ('min_diameter_mm', models.FloatField(default='0.00')),
                ('max_diameter_mm', models.FloatField(default='0.00')),
                ('min_thickness_mm', models.FloatField(default='0.00')),
                ('max_thickness_mm', models.FloatField(default='0.00')),
                ('rm_sku', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='related_ocskus', to='texturedar.rawmaterialsku', to_field='name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ImageData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('image_file', models.ImageField(max_length=250, upload_to='ar_data/research_development/image_data/')),
                ('notes', models.CharField(blank=True, max_length=250, null=True)),
                ('arsample', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='texturedar.arsample', to_field='name')),
                ('measured_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, to_field='username')),
            ],
        ),
        migrations.CreateModel(
            name='FlameData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('etched_surface', models.IntegerField(blank=True, default=1)),
                ('int_time', models.FloatField(blank=True, default=0.0)),
                ('avgs', models.IntegerField(blank=True, default=0)),
                ('nlc', models.IntegerField(blank=True, default=0)),
                ('edc', models.IntegerField(blank=True, default=0)),
                ('data_file', models.FileField(max_length=250, upload_to='ar_data/research_development/flame_data/')),
                ('measurement_id', models.CharField(max_length=50)),
                ('arsample', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='texturedar.arsample', to_field='name')),
                ('measured_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, to_field='username')),
            ],
        ),
        migrations.CreateModel(
            name='FinalProductSku',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('location', models.CharField(max_length=250, null=True)),
                ('description', models.CharField(max_length=250, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('stock_min', models.IntegerField(default=0)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=12)),
                ('active', models.BooleanField(default=True)),
                ('special', models.BooleanField(default=False)),
                ('notes', models.CharField(max_length=250, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=12, null=True)),
                ('released', models.DateField(null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='category_fpskus', to='texturedar.productcategory', to_field='code')),
                ('oc_sku', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='related_fpskus', to='texturedar.opticalcoatsku', to_field='name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='etchrecipe',
            name='oc_sku',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='texturedar.opticalcoatsku', to_field='name'),
        ),
        migrations.AddField(
            model_name='etchrecipe',
            name='rie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='texturedar.riesystem', to_field='code'),
        ),
        migrations.CreateModel(
            name='CCSData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('etched_surface', models.IntegerField(blank=True, default=1)),
                ('int_time', models.FloatField(blank=True, default=0.0)),
                ('avgs', models.IntegerField(blank=True, default=0)),
                ('data_file', models.FileField(max_length=250, upload_to='ar_data/research_development/ccs_data/')),
                ('measurement_id', models.CharField(max_length=50)),
                ('arsample', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='texturedar.arsample', to_field='name')),
                ('measured_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, to_field='username')),
            ],
        ),
        migrations.AddField(
            model_name='arsample',
            name='clean_recipe',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='texturedar.cleanrecipe'),
        ),
        migrations.AddField(
            model_name='arsample',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, to_field='username'),
        ),
        migrations.AddField(
            model_name='arsample',
            name='rie_recipe',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='texturedar.rierecipe'),
        ),
        migrations.AddField(
            model_name='arsample',
            name='substrate',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='texturedar.substrate'),
        ),
        migrations.AddField(
            model_name='arsample',
            name='tooling',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='texturedar.tooling'),
        ),
    ]
