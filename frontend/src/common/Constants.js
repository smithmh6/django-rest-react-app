// Columns object for listing columsn as well as mapping their display names
// In the form { field_name: 'Display Name' }
// Can be converted to array with Object.entries, giving [ ... ['field_name', 'Display Name] ... ]

// eslint-disable-next-line import/prefer-default-export
export const columns = {
  batchList: {
    coat: {
      name: 'Batch',
      sku_object_id: 'SKU',
      order_no: 'Order No.',
      step_object_id: 'Step',
      qty: 'QTY',
      pass_qty: 'Pass',
      notes: 'Notes',
      qrcode: 'Label',
    },
    sheet: {
      name: 'Batch',
      sku_object_id: 'SKU',
      order_no: 'Order No.',
      step_object_id: 'Step',
      qty: 'QTY',
      fail_qty: 'Fails',
      notes: 'Notes',
      qrcode: 'Label',
    },
    dice: {
      name: 'Batch',
      sku_object_id: 'SKU',
      order_no: 'Order No.',
      step_object_id: 'Step',
      qty: 'Part Qty',
      fail_qty: 'Fails',
      notes: 'Notes',
      qrcode: 'Label',
    },
    ship: {
      ship_batch: 'Batch',
      fp_sku: 'SKU',
      final_order: 'Order No.',
      part_qty: 'QTY',
      value_to_inv: 'Est. Value ($)',
      ship_batch_notes: 'Notes',
      qr_code: 'Label',
    },
    textured_ar: {
      'batch_no:': 'Batch',
      batch_type: 'Type',
      oc_sku: 'SKU',
      production_order: 'Order No.',
      ar_step: 'Step',
      part_qty: 'QTY',
      part_fails: 'Fails',
      notes: 'Notes',
    },
  },
  plateList: {
    coat: {
      serial: 'Serial',
      high_grade: 'High Grade',
      recycled: 'Recycle',
      fail1_object_id: 'Fail 1',
      fail2_object_id: 'Fail 2',
      fail3_object_id: 'Fail 3',
      notes: 'Plate Notes',
    },
    sheet: {
      serial: 'Serial',
      index: 'Index',
      exposed: 'Exposed',
      pm_sku: 'Photomask',
      etch_time: 'Etched (s)',
      part_qty: 'Parts',
      part_fail_qty: 'Fails',
      recycled: 'Recycle',
      fail1_object_id: 'Fail 1',
      fail2_object_id: 'Fail 2',
      fail3_object_id: 'Fail 3',
      notes: 'Plate Notes',
    },
    dice: {
      serial: 'Serial',
      index: 'Index',
      width: 'Width (mm)',
      length: 'Length (mm)',
      thickness: 'Thickness (mm)',
      fail1_object_id: 'Fail 1',
      fail2_object_id: 'Fail 2',
      fail3_object_id: 'Fail 3',
      notes: 'Notes',
    },
    ship: {
      part_serial: 'Serial',
      part_index: 'Index',
      wip3_in: 'WIP 3',
      notes: 'Notes',
    },
    textured_ar: {
      serial: 'Serial',
      act_time: 'ACT Time',
      ar_failcode: 'Fail',
      notes: 'Notes',
    },
  },
  batchInfo: {
    coat: {
      name: 'Batch',
      coat_sku_detail: 'SKU',
      order_no: 'Order No.',
      step_object_id: 'Step',
      hold: 'Hold',
      qty: 'QTY',
      pass_qty: 'Pass',
      created: 'Created',
      notes: 'Batch Notes',
    },
    sheet: {
      name: 'Batch',
      sheet_sku_detail: 'SKU',
      order_no: 'Order No.',
      step_object_id: 'Step',
      hold: 'Hold',
      qty: 'QTY',
      fail_qty: 'Fails',
      notes: 'Notes',
    },
    dice: {
      name: 'Batch',
      sku_object_id: 'SKU',
      order_no: 'Order No.',
      step_object_id: 'Step',
      qty: 'Parts',
      fail_qty: 'Part Fails',
      notes: 'Notes',
      value: 'Value',
    },
    init_dice: {
      name: 'Batch',
      dice_sku_detail: 'SKU',
      order_no: 'Order No.',
      step_object_id: 'Step',
      plate_qty: 'Plates',
      qty: 'Total Parts',
      notes: 'Notes',
    },
    ship: {
      ship_batch: 'Batch',
      fp_sku_detail: 'SKU',
      final_order: 'Order No.',
      transfer_order: 'Transfer No.',
      part_qty: 'Parts',
      selected_parts: 'Selected',
      value_to_inv: 'Est. Value ($)',
      ship_batch_notes: 'Notes',
    },
    textured_ar: {
      batch_no: 'Batch',
      batch_type: 'Type',
      ar_step: 'Step',
      production_recipe: 'Recipe',
      production_order: 'Order No.',
      notes: 'Notes',
      production_system: 'System',
      toolset: 'Toolset',
      oc_sku: 'OC SKU',
      part_qty: 'QTY',
      part_fails: 'Fails',
    },
  },
  partList: {
    sheet: {
      index: 'Index',
      photo_cd: 'Photo CD',
      etch_cd: 'Etch CD',
      fail1_object_id: 'Fail 1',
      fail2_object_id: 'Fail 2',
      fail3_object_id: 'Fail 3',
      notes: 'Notes',
    },
    dice: {
      serial: 'Serial',
      index: 'Index',
      width: 'Width (mm)',
      length: 'Length (mm)',
      thickness: 'Thickness (mm)',
      fail1_object_id: 'Fail 1',
      fail2_object_id: 'Fail 2',
      fail3_object_id: 'Fail 3',
      notes: 'Notes',
    },
  },
  skuDetail: {
    sheet: {
      name: 'Sheet Sku',
      cd_required: 'CD Required',
      cd_target: 'Target',
      cd_min: 'Min',
      cd_max: 'Max',
      description: 'Description',
    },
    dice: {
      name: 'Dice SKU',
      description: 'Description',
      sheet_sku: 'Corresponding Sheet SKU',
    },
  },
  skuForm: {
    rawmaterial: {
      name: 'RM SKU',
      location: 'Location',
      description: 'Description',
      vendor_sku: 'Vendor SKU',
      recycled_sku: 'Recycled SKU',
      cost: 'Cost ($)',
      qty: 'QTY',
      active: 'Active',
      special: 'Special',
      notes: 'Notes',
    },
    coat: {
      name: 'COAT SKU',
      rm_sku: 'RM SKU',
      location: 'Location',
      description: 'Description',
      cost: 'Cost ($)',
      active: 'Active',
      special: 'Special',
      notes: 'Notes',
    },
    sheet: {
      name: 'SHEET SKU',
      coat_sku: 'COAT SKU',
      location: 'Location',
      description: 'Description',
      part_qty: 'Parts',
      cd_required: 'CD',
      cd_target: 'Target',
      cd_min: 'Min',
      cd_max: 'Max',
      stock_min: 'Stock Min',
      modified: 'Modified',
      created: 'Created',
      active: 'Active',
      cost: 'Cost ($)',
      special: 'Special',
      notes: 'Notes',
    },
    dice: {
      name: 'DICE SKU',
      sheet_sku: 'SHEET SKU',
      route: 'Route',
      location: 'Location',
      description: 'Description',
      length_target: 'Length',
      length_min: 'Min',
      length_max: 'Max',
      width_target: 'Width',
      width_min: 'Min',
      width_max: 'Max',
      modified: 'Modified',
      created: 'Created',
      active: 'Active',
      cost: 'Cost ($)',
      special: 'Special',
      stock_min: 'Min Stock',
      min_part_index: 'Min Index',
      max_part_index: 'Max Index',
      notes: 'Notes',
    },
    finalproduct: {
      name: 'FP SKU',
      dice_sku: 'DICE SKU',
      category: 'Category',
      description: 'Description',
      price: 'Price ($)',
      cost: 'Cost ($)',
      modified: 'Modified',
      created: 'Created',
      released: 'Released',
      active: 'Active',
      special: 'Special',
    },
    photomask: {
      name: 'MASK SKU',
      sheet_sku: 'SHEET SKU',
      description: 'Description',
      cost: 'Cost',
      designed: 'Designed',
      version: 'Version',
      serial: 'Serial',
      vendor: 'Vendor',
      ordered: 'Ordered',
      started: 'Start',
      ended: 'End',
      cleaned: 'Cleaned',
      active: 'Active',
      special: 'Special',
      notes: 'Notes',
    },
  },
  purchaseForm: {
    items: {
      description: 'Description*',
      product_no: 'Product No.',
      qty: 'QTY*',
      package_size: 'Pkg. Size',
      moq: 'MOQ',
      item_cost: 'Unit Price ($)*',
      product_link: 'URL',
      po_no: 'PO',
      quote_no: 'Quote',
      group: 'Group',
      category: 'Category',
      project: 'Project',
      vendor: 'Vendor',
      notes: 'Notes',
    },
    vendors: {
      vendor_code: 'Vendor Code',
      name: 'Name',
      address_1: 'Address 1',
      address_2: 'Address 2',
      phone: 'Phone',
      poc: 'Email',
      account_type: 'Acct. Type',
    },
    groups: {
      group_code: 'Group Code',
      description: 'Description',
    },
    projects: {
      project_no: 'Project No.',
      name: 'Name',
      budget: 'Budget ($)',
      group: 'Group',
      total_spent: 'Total Spent ($)',
      status: 'Status',
      modified: 'Modified',
      start_date: 'Started',
    },
    categories: {
      category_code: 'Category Code',
      description: 'Description',
      poc: 'POC',
    },
  },
  purchaseList: {
    items: {
      id: 'ID',
      requested: 'Requested',
      requested_by: 'Requested By',
      description: 'Description',
      product_no: 'Product No.',
      item_cost: 'Price ($)',
      qty: 'QTY',
      total_cost: 'Total ($)',
      vendor_detail: 'Vendor',
      product_link: 'Link',
      status: 'Status',
      authorized: 'Authorized',
      approved: 'Approved',
      notes: 'Notes',
    },
    approvals: {
      id: 'ID',
      requested: 'Requested',
      requested_by: 'Requested By',
      description: 'Description',
      product_no: 'Product No.',
      item_cost: 'Price ($)',
      qty: 'QTY',
      total_cost: 'Total ($)',
      vendor: 'Vendor',
      product_link: 'Link',
      approved: 'Approved',
      notes: 'Notes',
    },
    authorizations: {
      id: 'ID',
      requested: 'Requested',
      requested_by: 'Requested By',
      description: 'Description',
      product_no: 'Product No.',
      item_cost: 'Price ($)',
      qty: 'QTY',
      total_cost: 'Total ($)',
      vendor: 'Vendor',
      product_link: 'Link',
      authorized: 'Authorized',
      notes: 'Notes',
    },
    transactions: {
      id: 'ID',
      requested: 'Requested',
      requested_by: 'Requested By',
      description: 'Description',
      product_no: 'Product No.',
      item_cost: 'Price ($)',
      qty: 'QTY',
      total_cost: 'Total ($)',
      vendor_detail: 'Vendor',
      quote_no: 'Quote No.',
      po_no: 'PO No.',
      product_link: 'Link',
      status: 'Status',
      notes: 'Notes',
    },
    inventory: {
      id: 'ID',
      requested: 'Requested',
      requested_by: 'Requested By',
      description: 'Description',
      product_no: 'Product No.',
      item_cost: 'Price ($)',
      qty: 'QTY',
      total_cost: 'Total ($)',
      vendor_detail: 'Vendor',
      quote_no: 'Quote No.',
      po_no: 'PO No.',
      product_link: 'Link',
      status: 'Status',
      notes: 'Notes',
    },
    vendors: {
      vendor_code: 'Vendor Code',
      name: 'Name',
      address_1: 'Address 1',
      address_2: 'Address 2',
      phone: 'Phone',
      poc: 'Email',
      account_type: 'Acct. Type',
    },
    groups: {
      group_code: 'Group Code',
      description: 'Description',
    },
    projects: {
      project_no: 'Project No.',
      name: 'Name',
      budget: 'Budget ($)',
      group: 'Group',
      total_spent: 'Total Spent ($)',
      status: 'Status',
      modified: 'Modified',
      start_date: 'Started',
    },
    categories: {
      category_code: 'Category Code',
      description: 'Description',
      poc: 'POC',
    },
  },
  maintenanceForm: {
    id: 'ID',
    title: 'Title',
    description: 'Description',
    category: 'Category',
    priority: 'Priority',
    created: 'Date Created',
    created_by: 'Created By',
  },
};
